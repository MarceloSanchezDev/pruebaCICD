name: CI + Preview (Vite + Vercel)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build con Node 20
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: 🏗️ Build
        run: npm run build

      - name: 📤 Subir artefacto dist (opcional)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          if-no-files-found: ignore
          retention-days: 7

  preview:
    name: Preview en Vercel (solo PR)
    needs: build
    if: github.event_name == 'pull_request' && needs.build.result == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json

      - name: 📦 Instalar dependencias
        run: npm ci

      - name: ⬇️ Instalar Vercel CLI
        run: npm i -g vercel@latest

      - name: 🧩 Vercel pull (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"

      - name: 🏗️ Build con Vercel (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel build --token="$VERCEL_TOKEN"

      - name: 🚀 Deploy prebuilt (preview)
        id: vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          url=$(vercel deploy --prebuilt --token="$VERCEL_TOKEN")
          echo "url=$url" >> "$GITHUB_OUTPUT"

      - name: 📝 Comentar URL en el PR
        if: steps.vercel.outputs.url != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ✅ **Preview listo**: ${{ steps.vercel.outputs.url }}
            _Este comentario se actualizará en cada push del PR._
  production:
      name: Deploy a Producción (main)
      needs: build
      if: github.ref == 'refs/heads/main' && needs.build.result == 'success'
      runs-on: ubuntu-latest
      # Esto crea/usa el environment "production" y muestra la URL en la UI de Deployments
      environment:
        name: production
        url: ${{ steps.vercel_prod.outputs.url }}
      steps:
        - name: 📥 Checkout
          uses: actions/checkout@v4

        - name: 🔧 Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: 20
            cache: npm
            cache-dependency-path: package-lock.json

        - name: 📦 Instalar dependencias
          run: npm ci

        - name: ⬇️ Instalar Vercel CLI
          run: npm i -g vercel@latest

        - name: 🧩 Vercel pull (prod)
          env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          run: vercel pull --yes --environment=production --token="$VERCEL_TOKEN"

        - name: 🏗️ Build con Vercel (prod)
          env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          run: vercel build --prod --token="$VERCEL_TOKEN"

        - name: 🚀 Deploy prebuilt (prod)
          id: vercel_prod
          env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          run: |
            url=$(vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN")
            echo "url=$url" >> "$GITHUB_OUTPUT"

        - name: 📣 Mostrar URL de producción
          run: echo "URL de producción: ${{ steps.vercel_prod.outputs.url }}"